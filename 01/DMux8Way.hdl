// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    /// untuk bahagi , takleh guna terus DMux4Way, kena guna DMux biasa dulu, DMux biasa
    /// DMux biasa potong input bahagi 2, yang terbahagai 2 tu baru kita bahagi 4 guna 4wayDMux
    /// Pokoknya kita start dari kecil work the way up untuk potong input ikut aliran

    DMux(in=in , sel= sel[2], a=up , b= down);
    DMux4Way(in= up, sel= sel[0..1], a= a, b=b , c= c, d=d );
    DMux4Way(in= down , sel= sel[0..1] , a= e, b= f, c= g, d=h );



}